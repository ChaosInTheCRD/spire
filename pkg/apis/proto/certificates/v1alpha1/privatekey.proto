syntax = "proto3";

package certificates.v1alpha1;

option go_package = "gitlab.com/venafi/vaas/applications/tls-protect/dmi/cli/firefly-ca/pkg/apis/proto/certificates/v1alpha1;v1alpha1";

// PrivateKeyAlgorithm is the type of public key cryptography algorithm to be
// used to generate and sign X.509 certificatess.
enum PrivateKeyAlgorithm {
  // PRIVATE_KEY_ALGORITHM_RSA is the Rivest–Shamir–Adleman public key
  // algorithm.
  // https://en.wikipedia.org/wiki/RSA_(cryptosystem)
  PRIVATE_KEY_ALGORITHM_RSA = 0;

  // PRIVATE_KEY_ALGORITHM_ECDS is the Elliptic Curve Digital Signature
  // Algorithm.
  // https://en.wikipedia.org/wiki/Elliptic_Curve_Digital_Sign/ature_Algorithm
  PRIVATE_KEY_ALGORITHM_ECDSA = 1;


  // PRIVATE_KEY_ALGORITHM_ED25519 is a EdDSA using Curve25519
  // https://en.wikipedia.org/wiki/EdDSA#Ed25519
  PRIVATE_KEY_ALGORITHM_ED25519 = 2;
}

// PrivateKeyRequest is a request by the client for the server to generate a
// private key. The client can request the algorithm used to generate the key,
// and the size of the key if relevant.
message PrivateKeyRequest {
  // algorithm is the type of public key cryptography algorithm to be used to
  // generate the private key.
  PrivateKeyAlgorithm algorithm = 1;

  // Size is an optional field to request a specific "size" of the private key.
  // If algorithm is specified as below and `size` is not provided:
  // - PRIVATE_KEY_ALGORITHM_RSA: size will default to 2048.
  // - PRIVATE_KEY_ALGORITHM_ECDSA: size will default to 256.
  // - PRIVATE_KEY_ALGORITHM_ED25519: size is not supported.
  // If size is defined, then it must be:
  // - PRIVATE_KEY_ALGORITHM_RSA: 2048 <= size <= 4096
  // - PRIVATE_KEY_ALGORITHM_ECDSA: 256, 384, 521
  // - PRIVATE_KEY_ALGORITHM_ED25519: rejected when defined.
  optional uint64 size = 2;
}
