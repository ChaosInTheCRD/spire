// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.3
// source: v1alpha1/certificatesigningrequest.proto

package v1alpha1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CertificateSigningRequest is a single certificate signing request from a
// client. A request _must_ include at least a PEM encoded X.509 certificate
// signing request that has been signed by the client's private key. A client
// may optionally request other certificate attributes that cannot be encoded
// inside a certificate signing request. These additional attributes may or
// may not be honored based on the server's configuration and authorization
// policy.
// Requests may be denied by the server following a authorization review.
type CertificateSigningRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// request contains a single PEM encoded X.509 certificate signing request,
	// which must be signed by the client's private key.
	Request []byte `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	// policy_name contains the name of the Policy which the client wishes to request against.
	PolicyName string `protobuf:"bytes,2,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"`
	// validity_period is an optional field containing ISO8601 formatted duration the client wishes
	// the resulting X.509 certificate is signed for.
	// The specified Policy has same attribute, so the shorter duration will be used indeed.
	ValidityPeriod *string `protobuf:"bytes,3,opt,name=validity_period,json=validityPeriod,proto3,oneof" json:"validity_period,omitempty"`
}

func (x *CertificateSigningRequest) Reset() {
	*x = CertificateSigningRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1alpha1_certificatesigningrequest_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CertificateSigningRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CertificateSigningRequest) ProtoMessage() {}

func (x *CertificateSigningRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1alpha1_certificatesigningrequest_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CertificateSigningRequest.ProtoReflect.Descriptor instead.
func (*CertificateSigningRequest) Descriptor() ([]byte, []int) {
	return file_v1alpha1_certificatesigningrequest_proto_rawDescGZIP(), []int{0}
}

func (x *CertificateSigningRequest) GetRequest() []byte {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *CertificateSigningRequest) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

func (x *CertificateSigningRequest) GetValidityPeriod() string {
	if x != nil && x.ValidityPeriod != nil {
		return *x.ValidityPeriod
	}
	return ""
}

// CertificateSigningRequestResponse is the server's response to a single
// certificate signing request from a client. The message contains a single PEM
// encoded X.509 certificate chain, including the client's requested leaf
// certificate. The server will never return the root Certificate Authority
// (CA). The server may respond with a single certificate if the root CA is the
// issuer.
// The leaf certificate is always the first certificate in the chain.
// The chain will always be in order of increasing issuer authority.
type CertificateSigningRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// certificate_chain is the PEM encoded X.509 certificate chain returned in
	// response to a certificate signing request.
	// certificate_chain will never contain the root CA.
	// The signed client's leaf certificate will always be first in the chain.
	// The chain will always be in order of increasing issuer authority.
	CertificateChain []byte `protobuf:"bytes,1,opt,name=certificate_chain,json=certificateChain,proto3" json:"certificate_chain,omitempty"`
}

func (x *CertificateSigningRequestResponse) Reset() {
	*x = CertificateSigningRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1alpha1_certificatesigningrequest_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CertificateSigningRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CertificateSigningRequestResponse) ProtoMessage() {}

func (x *CertificateSigningRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1alpha1_certificatesigningrequest_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CertificateSigningRequestResponse.ProtoReflect.Descriptor instead.
func (*CertificateSigningRequestResponse) Descriptor() ([]byte, []int) {
	return file_v1alpha1_certificatesigningrequest_proto_rawDescGZIP(), []int{1}
}

func (x *CertificateSigningRequestResponse) GetCertificateChain() []byte {
	if x != nil {
		return x.CertificateChain
	}
	return nil
}

var File_v1alpha1_certificatesigningrequest_proto protoreflect.FileDescriptor

var file_v1alpha1_certificatesigningrequest_proto_rawDesc = []byte{
	0x0a, 0x28, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x63, 0x65, 0x72, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x63, 0x65, 0x72, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x22, 0x98, 0x01, 0x0a, 0x19, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x0f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x50,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x88, 0x01, 0x01, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x22, 0x50, 0x0a, 0x21,
	0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x63, 0x65,
	0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x72,
	0x5a, 0x70, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x76, 0x65, 0x6e,
	0x61, 0x66, 0x69, 0x2f, 0x76, 0x61, 0x61, 0x73, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x74, 0x6c, 0x73, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63,
	0x74, 0x2f, 0x64, 0x6d, 0x69, 0x2f, 0x63, 0x6c, 0x69, 0x2f, 0x66, 0x69, 0x72, 0x65, 0x66, 0x6c,
	0x79, 0x2d, 0x63, 0x61, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73,
	0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x3b, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1alpha1_certificatesigningrequest_proto_rawDescOnce sync.Once
	file_v1alpha1_certificatesigningrequest_proto_rawDescData = file_v1alpha1_certificatesigningrequest_proto_rawDesc
)

func file_v1alpha1_certificatesigningrequest_proto_rawDescGZIP() []byte {
	file_v1alpha1_certificatesigningrequest_proto_rawDescOnce.Do(func() {
		file_v1alpha1_certificatesigningrequest_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1alpha1_certificatesigningrequest_proto_rawDescData)
	})
	return file_v1alpha1_certificatesigningrequest_proto_rawDescData
}

var file_v1alpha1_certificatesigningrequest_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_v1alpha1_certificatesigningrequest_proto_goTypes = []interface{}{
	(*CertificateSigningRequest)(nil),         // 0: certificates.v1alpha1.CertificateSigningRequest
	(*CertificateSigningRequestResponse)(nil), // 1: certificates.v1alpha1.CertificateSigningRequestResponse
}
var file_v1alpha1_certificatesigningrequest_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_v1alpha1_certificatesigningrequest_proto_init() }
func file_v1alpha1_certificatesigningrequest_proto_init() {
	if File_v1alpha1_certificatesigningrequest_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1alpha1_certificatesigningrequest_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CertificateSigningRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1alpha1_certificatesigningrequest_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CertificateSigningRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_v1alpha1_certificatesigningrequest_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1alpha1_certificatesigningrequest_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v1alpha1_certificatesigningrequest_proto_goTypes,
		DependencyIndexes: file_v1alpha1_certificatesigningrequest_proto_depIdxs,
		MessageInfos:      file_v1alpha1_certificatesigningrequest_proto_msgTypes,
	}.Build()
	File_v1alpha1_certificatesigningrequest_proto = out.File
	file_v1alpha1_certificatesigningrequest_proto_rawDesc = nil
	file_v1alpha1_certificatesigningrequest_proto_goTypes = nil
	file_v1alpha1_certificatesigningrequest_proto_depIdxs = nil
}
